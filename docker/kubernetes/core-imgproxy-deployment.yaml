apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Github\mindy-project\core-docker\docker\kubernetes\kompose.exe -f ../docker-compose.core.yml -f ../docker-compose.ai.yml -f ../docker-compose.blog.yml -f ../docker-compose.development.yml -f ../docker-compose.ecommerce.yml -f ../docker-compose.mail.yml -f ../docker-compose.s3.yml convert
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    service: imgproxy
  name: imgproxy
spec:
  replicas: $CORE_IMGPROXY_REPLICAS
  selector:
    matchLabels:
      service: imgproxy
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Github\mindy-project\core-docker\docker\kubernetes\kompose.exe -f ../docker-compose.core.yml -f ../docker-compose.ai.yml -f ../docker-compose.blog.yml -f ../docker-compose.development.yml -f ../docker-compose.ecommerce.yml -f ../docker-compose.mail.yml -f ../docker-compose.s3.yml convert
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        service: imgproxy
    spec:
      initContainers:
        - name: init-imgproxy
          image: curlimages/curl
          command: ['sh', '-c', 'until curl -fsSL -m 2 db:5432 > /dev/null 2>&1 || [ $? -eq 52 ]; do echo waiting for postgres; sleep 2; done;']
      containers:
        - env:
            - name: IMGPROXY_BIND
              value: :5001
            - name: IMGPROXY_LOCAL_FILESYSTEM_ROOT
              value: /
            - name: IMGPROXY_USE_ETAG
              value: "true"
            - name: IMGPROXY_ENABLE_WEBP_DETECTION
              valueFrom:
                secretKeyRef:
                  name: env-secrets
                  key: IMGPROXY_ENABLE_WEBP_DETECTION
          image: darthsim/imgproxy:v3.8.0
          livenessProbe:
            exec:
              command:
                - imgproxy
                - health
            failureThreshold: 10
            periodSeconds: 5
            timeoutSeconds: 5
          name: supabase-imgproxy
          ports:
            - containerPort: 5001
          volumeMounts:
            - name: storage-volume
              mountPath: /var/lib/storage
              subPath: storage
      restartPolicy: Always
      volumes:
        - name: storage-volume
          persistentVolumeClaim:
            claimName: storage-volume-claim
