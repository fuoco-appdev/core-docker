apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Github\mindy-project\core-docker\docker\kubernetes\kompose.exe -f ../docker-compose.core.yml -f ../docker-compose.ai.yml -f ../docker-compose.blog.yml -f ../docker-compose.development.yml -f ../docker-compose.ecommerce.yml -f ../docker-compose.mail.yml -f ../docker-compose.s3.yml convert
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    service: analytics
  name: analytics
spec:
  replicas: {{ int .Values.core.analytics.replicas }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      service: analytics
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Github\mindy-project\core-docker\docker\kubernetes\kompose.exe -f ../docker-compose.core.yml -f ../docker-compose.ai.yml -f ../docker-compose.blog.yml -f ../docker-compose.development.yml -f ../docker-compose.ecommerce.yml -f ../docker-compose.mail.yml -f ../docker-compose.s3.yml convert
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        service: analytics
    spec:
      initContainers:
        - name: init-analytics
          image: supabase/logflare:build
          imagePullPolicy: IfNotPresent
          command:
            - sh 
            - -c
            - |
              until curl -fsSL -m 2 db:5432 > /dev/null 2>&1 || [ $? -eq 52 ]; do echo waiting for postgres; sleep 2; done;
      containers:
        - env:
            - name: DB_DATABASE
              value: _supabase
            - name: DB_SCHEMA
              value: _analytics
            - name: DB_USERNAME
              value: supabase_admin
            - name: LOGFLARE_FEATURE_FLAG_OVERRIDE
              value: multibackend=true
            - name: LOGFLARE_MIN_CLUSTER_SIZE
              value: "1"
            - name: LOGFLARE_SINGLE_TENANT
              value: "true"
            - name: LOGFLARE_SUPABASE_MODE
              value: "true"
            - name: POSTGRES_BACKEND_SCHEMA
              value: _analytics
            - name: PORT
              value: '4000'
            - name: HOST
              valueFrom:
                secretKeyRef:
                  name: env-secrets
                  key: NGINX_LOGFLARE_HOST_URL
            - name: PHX_URL_HOST
              valueFrom:
                secretKeyRef:
                  name: env-secrets
                  key: NGINX_LOGFLARE_HOST_URL
            - name: LOGFLARE_NODE_HOST
              valueFrom:
                secretKeyRef:
                  name: env-secrets
                  key: NGINX_LOGFLARE_HOST_URL
            - name: DB_HOSTNAME
              valueFrom:
                secretKeyRef:
                  name: env-secrets
                  key: POSTGRES_HOST
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: env-secrets
                  key: POSTGRES_PORT
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: env-secrets
                  key: POSTGRES_PASSWORD
            - name: LOGFLARE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: env-secrets
                  key: LOGFLARE_API_KEY
            - name: POSTGRES_BACKEND_URL
              valueFrom:
                secretKeyRef:
                  name: env-secrets
                  key: ANALYTICS_POSTGRES_BACKEND_URL
          image: supabase/logflare:build
          livenessProbe:
            exec:
              command:
                - curl
                - http://analytics:4000/health
            failureThreshold: 10
            periodSeconds: 5
            timeoutSeconds: 5
          name: supabase-analytics
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 4000
      restartPolicy: Always
