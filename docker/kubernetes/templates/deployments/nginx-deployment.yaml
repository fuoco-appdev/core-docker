apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  replicas: {{ int .Values.nginx.replicas }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      service: nginx
  template:
    metadata:
      labels:
        service: nginx
    spec:
      initContainers:
      - name: init-nginx
        image: nginx:latest
        command:
          - /bin/sh
          - -c
          - |
            ls /etc/nginx
            cp -r /etc/nginx/* /tmp/etc/nginx
            rm /tmp/etc/nginx/nginx.conf
            mkdir /tmp/etc/nginx/conf.d/http
            mkdir /tmp/etc/nginx/conf.d/stream
            while [ ! -e /tmp/etc/nginx/nginx.conf ] || [ ! -s /tmp/etc/nginx/nginx.conf ]; do 
              echo 'Waiting for all copied files...'
              sleep 10
            done
            cat /tmp/etc/nginx/.htpasswd
            cat /tmp/etc/ssl/domain.pass
            cat /tmp/etc/nginx/nginx.conf
        volumeMounts:
          - mountPath: /tmp/etc/nginx
            name: nginx-volume
            subPath: nginx
          - mountPath: /tmp/etc/ssl
            name: nginx-ssl-volume
            subPath: ssl
      containers:
      - name: nginx
        image: nginx:latest
        volumeMounts:
          - mountPath: /etc/nginx
            name: nginx-volume
            subPath: nginx
          - mountPath: /etc/ssl
            name: nginx-ssl-volume
            subPath: ssl
        ports:
          - containerPort: 80
          - containerPort: 443
          - containerPort: 5433
      restartPolicy: Always
      volumes:
      - name: nginx-volume
        persistentVolumeClaim:
            claimName: nginx-volume-claim
      - name: nginx-ssl-volume
        persistentVolumeClaim:
            claimName: nginx-ssl-volume-claim