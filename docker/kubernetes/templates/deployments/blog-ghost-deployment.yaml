apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Github\mindy-project\core-docker\docker\kubernetes\kompose.exe -f ../docker-compose.core.yml -f ../docker-compose.ai.yml -f ../docker-compose.blog.yml -f ../docker-compose.development.yml -f ../docker-compose.ecommerce.yml -f ../docker-compose.mail.yml -f ../docker-compose.s3.yml convert
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    service: ghost
  name: ghost
spec:
  replicas: {{ int .Values.blog.ghost.replicas }}
  selector:
    matchLabels:
      service: ghost
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        service: ghost
    spec:
      initContainers:
      - name: init-ghost
        image: ghost:5-alpine
        command:
          - /bin/sh
          - -c
          - |
            ls /var/lib/ghost/
      containers:
        - env:
            - name: database__client
              value: mysql
            - name: database__connection__database
              value: ghost
            - name: database__connection__host
              value: ghost-db
            - name: database__connection__user
              value: root
            - name: url
              value: http://ghost:2368
            - name: database__connection__password
              valueFrom:
                secretKeyRef:
                  name: env-secrets
                  key: GHOST_DB_PASSWORD
          image: ghost:5-alpine
          name: ghost
          ports:
            - containerPort: 2368
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/ghost/content
              name: ghost-volume
      restartPolicy: Always
      volumes:
        - name: ghost-volume
          persistentVolumeClaim:
            claimName: ghost-volume-claim
