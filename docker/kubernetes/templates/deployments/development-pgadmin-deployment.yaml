apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Github\mindy-project\core-docker\docker\kubernetes\kompose.exe -f ../docker-compose.core.yml -f ../docker-compose.ai.yml -f ../docker-compose.blog.yml -f ../docker-compose.development.yml -f ../docker-compose.ecommerce.yml -f ../docker-compose.mail.yml -f ../docker-compose.s3.yml convert
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: pgadmin
  name: pgadmin
spec:
  replicas: {{ int .Values.development.pgadmin.replicas }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      io.kompose.service: pgadmin
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Github\mindy-project\core-docker\docker\kubernetes\kompose.exe -f ../docker-compose.core.yml -f ../docker-compose.ai.yml -f ../docker-compose.blog.yml -f ../docker-compose.development.yml -f ../docker-compose.ecommerce.yml -f ../docker-compose.mail.yml -f ../docker-compose.s3.yml convert
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: pgadmin
    spec:
      containers:
        - env:
            - name: PGADMIN_DEFAULT_EMAIL
              valueFrom:
                secretKeyRef:
                  name: env-secrets
                  key: PGADMIN_DEFAULT_EMAIL
            - name: PGADMIN_DEFAULT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: env-secrets
                  key: PGADMIN_DEFAULT_PASSWORD
          image: dpage/pgadmin4:latest
          name: pgadmin
          ports:
            - containerPort: 80
              protocol: TCP
      restartPolicy: Always
