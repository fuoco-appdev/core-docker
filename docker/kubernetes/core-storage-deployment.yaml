apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Github\mindy-project\core-docker\docker\kubernetes\kompose.exe -f ../docker-compose.core.yml -f ../docker-compose.ai.yml -f ../docker-compose.blog.yml -f ../docker-compose.development.yml -f ../docker-compose.ecommerce.yml -f ../docker-compose.mail.yml -f ../docker-compose.s3.yml convert
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    service: storage
  name: storage
spec:
  replicas: 1
  selector:
    matchLabels:
      service: storage
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Github\mindy-project\core-docker\docker\kubernetes\kompose.exe -f ../docker-compose.core.yml -f ../docker-compose.ai.yml -f ../docker-compose.blog.yml -f ../docker-compose.development.yml -f ../docker-compose.ecommerce.yml -f ../docker-compose.mail.yml -f ../docker-compose.s3.yml convert
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        service: storage
    spec:
      initContainers:
        - name: init-storage
          image: curlimages/curl
          command: [
            'sh', 
            '-c', 
            'until curl -fsSL -m 2 db:5432 > /dev/null 2>&1 || [ $? -eq 52 ]; do echo waiting for postgres; sleep 2; done;',
            '-c',
            'until curl -fsSL -m 2 rest:3000; do echo waiting for rest; sleep 2; done;',
            '-c',
            'until curl -fsSL -m 2 imgproxy:5001; do echo waiting for imgproxy; sleep 2; done;'
          ]
      containers:
        - env:
            - name: AWS_DEFAULT_REGION
              value: stub
            - name: ENABLE_IMAGE_TRANSFORMATION
              value: "true"
            - name: FILE_SIZE_LIMIT
              value: "52428800"
            - name: FILE_STORAGE_BACKEND_PATH
              value: /var/lib/storage
            - name: GLOBAL_S3_BUCKET
              value: stub
            - name: GLOBAL_S3_FORCE_PATH_STYLE
              value: "true"
            - name: GLOBAL_S3_PROTOCOL
              value: http
            - name: IMGPROXY_URL
              value: http://imgproxy:5001
            - name: POSTGREST_URL
              value: http://rest:3000
            - name: REGION
              value: stub
            - name: STORAGE_BACKEND
              value: s3
            - name: TENANT_ID
              value: stub
            - name: ANON_KEY
              valueFrom:
                secretKeyRef:
                  name: env-secrets
                  key: ANON_KEY
            - name: SERVICE_KEY
              valueFrom:
                secretKeyRef:
                  name: env-secrets
                  key: SERVICE_ROLE_KEY
            - name: PGRST_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: env-secrets
                  key: PGRST_JWT_SECRET
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: env-secrets
                  key: STORAGE_DATABASE_URL
            - name: GLOBAL_S3_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: env-secrets
                  key: MINIO_ADDRESS
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: env-secrets
                  key: MINIO_ROOT_USER
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: env-secrets
                  key: MINIO_ROOT_PASSWORD
          image: supabase/storage-api:v1.14.5
          livenessProbe:
            exec:
              command:
                - wget
                - --no-verbose
                - --tries=1
                - --spider
                - http://localhost:5000/health
            failureThreshold: 10
            periodSeconds: 5
            timeoutSeconds: 5
          name: supabase-storage
          ports:
            - containerPort: 5000
          volumeMounts:
            - name: storage-volume
              mountPath: /var/lib/storage
              subPath: storage
      restartPolicy: Always
      volumes:
        - name: storage-volume
          persistentVolumeClaim:
            claimName: storage-volume-claim
