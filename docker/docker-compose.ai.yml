services:
  ollama:
    volumes:
      - ollama:/root/.ollama
    container_name: ollama
    pull_policy: always
    tty: true
    restart: unless-stopped
    image: ollama/ollama:${OLLAMA_DOCKER_TAG-latest}
    # GPU support
    deploy:
      resources:
        reservations:
          devices:
            - driver: ${OLLAMA_GPU_DRIVER-nvidia}
              count: ${OLLAMA_GPU_COUNT-1}
              capabilities:
                - gpu

  open-webui:
    image: fuocoappdev/open-webui:latest
    build:
      context: ../open-webui
      args:
        OLLAMA_BASE_URL: '/ollama'
      dockerfile: Dockerfile
    container_name: open-webui
    volumes:
      - open-webui:/app/backend/data
    depends_on:
      - ollama
      - standalone
    ports:
      - 127.0.0.1:${OPEN_WEBUI_PORT-3002}:8080
    environment:
      - 'OLLAMA_BASE_URL=http://ollama:11434'
      - 'WEBUI_SECRET_KEY='
      - 'WEBUI_URL=${NGINX_OPEN_WEBUI_HOST_URL}'
      - 'VECTOR_DB=milvus'
      - 'MILVUS_URI=${MILVUS_URI}'
    extra_hosts:
      - host.docker.internal:host-gateway
    restart: unless-stopped

  openedai-speech-server:
    image: ghcr.io/matatonic/openedai-speech
    environment:
      TTS_HOME: voices
      HF_HOME: voices
      PRELOAD_MODEL: xtts
      EXTRA_ARGS: --log-level DEBUG --unload-timer 300
      USE_ROCM: 1
    ports:
      - 127.0.0.1:8002:8000
    volumes:
      - ../openedai-speech/voices:/app/voices
      - ../openedai-speech/config:/app/config
    # To install as a service
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              #device_ids: ['0', '1'] # Select a gpu, or
              count: all
              capabilities: [ gpu ]

volumes:
  ollama: {}
  open-webui: {}
